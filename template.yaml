AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-base

  Example SAM Template for aws-base projects
  
Parameters:

  StackName:
    Type: String
  AppPrefix:
    Type: String
  # ApiVersion:
  #   Type: String
  EnableSQS:
    Type: String
    AllowedValues: [true, false]
    Default: true
  SourceBucket:
    Type: String
    Default: agb-app-source
  ApiStageName:
    Type: String
    Default: dev

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:

  Function:
    Runtime: nodejs12.x
    Timeout: 3
    CodeUri:
      Bucket: !Sub ${SourceBucket}
      Key: !Sub ${StackName}/lambda.zip
  
Resources:

  FileUpdateEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${AppPrefix}-file-update-event-topic

  FileUpdateEventPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      Topics: 
        - !Ref FileUpdateEventTopic
      PolicyDocument: 
        Statement: 
          - 
            Action: 
              - SNS:Publish
            Effect: Allow
            Resource: !Ref FileUpdateEventTopic
            Principal:  
              # This policy is required to allow S3 to publish to the topic, otherwise we get circular dependencies
              Service: s3.amazonaws.com

  FileBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub ${AppPrefix}-file-bucket
      NotificationConfiguration:
        TopicConfigurations:
          - Event: 's3:ObjectCreated:*'
            Topic: !Ref FileUpdateEventTopic

  FileUpdateEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AppPrefix}-file-update-event-function
      Handler: index.handleFileUpdateEvent
      # Environment:
      #   Variables:
      #     RESPONSE_SUBSCRIPTION_ID: !Sub ${ApplicationName}-TestFunction
      #     TARGET_FUNCTION_REQUEST_QUEUE_URL: !Ref TargetFunctionRequestQueue
      # Policies:
      #   - SQSSendMessagePolicy:
      #       QueueName: !GetAtt TargetFunctionRequestQueue.QueueName
      Events:
        FileUpdateEvent:
          Type: SNS
          Properties:
            Topic: !Ref FileUpdateEventTopic

  AffordabilityApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref ApiStageName
      Name: !Sub ${AppPrefix}-AffordabilityApi
      EndpointConfiguration: REGIONAL
      Auth:
        ApiKeyRequired: true # sets for all methods
        UsagePlan:
          CreateUsagePlan: PER_API
          # Quota:
          #   Limit: 500
          #   Period: MONTH
          # Throttle:
          #   BurstLimit: 100
          #   RateLimit: 50

  AffordabilityApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AppPrefix}-affordability-api-function
      Handler: index.handleAffordabilityApiRequest
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          FILE_BUCKET: !Ref FileBucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref FileBucket
      Events:
        HttpEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AffordabilityApi
            Method: POST
            Path: /affordability

  UpdateConfigurationApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AppPrefix}-update-configuration-api-function
      Handler: index.handleUpdateConfigurationApiRequest
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
          FILE_BUCKET: !Ref FileBucket
      Policies:
        - S3WritePolicy:
            BucketName: !Ref FileBucket
      Events:
        HttpEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AffordabilityApi
            Method: POST
            Path: /configuration

Outputs:

  AffordabilityApi:
    Description: "Affordability API URL"
    Value: !Sub "https://${AffordabilityApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/affordability"

  AffordabilityApiFunctionARN:
    Description: "Affordability API Function ARN"
    Value: !GetAtt AffordabilityApiFunction.Arn
    

